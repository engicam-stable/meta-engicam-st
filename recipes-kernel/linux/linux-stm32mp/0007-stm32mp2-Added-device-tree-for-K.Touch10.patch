From cf0505e47708ce26bcca76880136181ab29daaf3 Mon Sep 17 00:00:00 2001
From: FraUtel <francesco.utel@engicam.com>
Date: Mon, 30 Sep 2024 10:16:05 +0000
Subject: [PATCH] stm32mp2: Added device tree for K.Touch10

---
 ...tm32mp257f-icore-ctouch31-futurelabs10.dts | 1400 +++++++++++++++++
 1 file changed, 1400 insertions(+)
 create mode 100644 arch/arm64/boot/dts/st/stm32mp257f-icore-ctouch31-futurelabs10.dts

diff --git a/arch/arm64/boot/dts/st/stm32mp257f-icore-ctouch31-futurelabs10.dts b/arch/arm64/boot/dts/st/stm32mp257f-icore-ctouch31-futurelabs10.dts
new file mode 100644
index 000000000..99edc3d57
--- /dev/null
+++ b/arch/arm64/boot/dts/st/stm32mp257f-icore-ctouch31-futurelabs10.dts
@@ -0,0 +1,1400 @@
+// SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause)
+/*
+ * Copyright (C) 2024, STMicroelectronics - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/* For more information on Device Tree configuration, please refer to
+ * https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/pinctrl/stm32-pinfunc.h>
+#include "stm32mp257.dtsi"
+#include "stm32mp25xf.dtsi"
+#include "stm32mp257f-icore-edimm2-mx-resmem.dtsi"
+#include "stm32mp25xxai-pinctrl.dtsi"
+
+/* USER CODE BEGIN includes */
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/leds/common.h>
+#include <dt-bindings/regulator/st,stm32mp25-regulator.h>
+/* USER CODE END includes */
+
+/ {
+	model = "STMicroelectronics STM32MP257F-EV1 STM32CubeMX board - openstlinux-6.1-yocto-mickledore-mpu-v24.06.26";
+	compatible = "st,stm32mp257f-icore-edimm2-mx", "st,stm32mp257f-ev1", "st,stm32mp257";
+
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x0 0x80000000>;
+
+		/* USER CODE BEGIN memory */
+		/* USER CODE END memory */
+	};
+
+	/* USER CODE BEGIN root */
+
+	aliases{
+		ethernet0 = &eth2;
+		ethernet1 = &eth1;
+		serial0 = &usart2;
+		serial1 = &usart6;
+		serial2 = &lpuart1;
+		serial3 = &usart1;
+		rtc1 = &rtc;
+	};
+
+	chosen{
+		stdout-path = "serial0:115200n8";
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+		framebuffer {
+			compatible = "simple-framebuffer";
+			clocks = <&rcc CK_BUS_LTDC>, <&rcc CK_KER_LTDC>,
+				 <&rcc CK_BUS_LVDS>, <&rcc CK_KER_LVDSPHY>;
+			status = "disabled";
+		};
+	};
+
+	hdmi:connector{
+		compatible = "hdmi-connector";
+		label = "hdmi";
+		type = "a";
+
+		port{
+
+			hdmi_connector_in:endpoint{
+				remote-endpoint = <&adv753x_out>;
+			};
+		};
+	};
+
+	panel_lvds:panel-lvds{
+		compatible = "panel-lvds";
+		backlight = <&panel_lvds_backlight>;
+		status = "okay";
+		width-mm = <210>;
+		height-mm = <158>;
+		data-mapping = "vesa-24";
+
+		panel-timing {
+			clock-frequency = <72000000>;
+			hactive = <1280>;
+			vactive = <800>;
+			hsync-len = <136>;
+			hfront-porch = <20>;
+			hback-porch = <160>;
+			vfront-porch = <3>;
+			vback-porch = <29>;
+			vsync-len = <6>;
+			de-active = <1>;
+		};
+
+		port{
+
+			lvds_panel_in:endpoint{
+				remote-endpoint = <&lvds_out0>;
+			};
+		};
+	};
+
+	panel_lvds_backlight:panel-lvds-backlight{
+		compatible = "gpio-backlight";
+		gpios = <&gpioi 7 GPIO_ACTIVE_HIGH>;
+		default-on;
+		default-brightness-level = <1>;
+		status = "okay";
+	};
+
+	lcd_pwr_en: regulator-lcd_pwr_en {
+		compatible = "regulator-fixed";
+		regulator-name = "lcd_pwr_en";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiof 11 0>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	sound: sound {
+		compatible = "audio-graph-card";
+		label = "STM32MP25-EV1";
+		dais = <&i2s2_port>;
+		status = "disabled";
+	};
+
+	wifi_pwrseq: wifi-pwrseq {
+		compatible = "mmc-pwrseq-simple";
+		reset-gpios = <&gpioi 2 1>;
+		startup-delay-us = <10000>;
+		enable-active-high;
+	};
+
+	/*bt_reg_on: regulator-bt-reg-on {
+		compatible = "regulator-fixed";
+		regulator-name = "BT_REG_ON";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpioi 2 GPIO_ACTIVE_HIGH>;
+		startup-delay-us = <100>;
+		enable-active-high;
+		regulator-always-on;
+	};*/
+
+	wifi_mode: regulator-wifi_mode {
+		compatible = "regulator-fixed";
+		regulator-name = "wifi_mode";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiod 3 0>;
+		enable-active-high;
+		regulator-always-on;
+	};	
+	/* USER CODE END root */
+
+	clocks{
+
+		/* USER CODE BEGIN clocks */
+
+		cec_clock:cec-clock{
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			clock-frequency = <12000000>;
+		};
+
+		clk_ext_camera:clk-ext-camera{
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <24000000>;
+		};
+
+		pad_clk:pad-clk{
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <100000000>;
+		};
+		/* USER CODE END clocks */
+	};
+
+}; /*root*/
+
+&pinctrl {
+
+	eth1_mdio_pins_mx: eth1_mdio_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 0, AF10)>, /* ETH1_MDC */
+					 <STM32_PINMUX('F', 2, AF10)>; /* ETH1_MDIO */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+	};
+
+	eth1_mdio_sleep_pins_mx: eth1_mdio_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 0, ANALOG)>, /* ETH1_MDC */
+					 <STM32_PINMUX('F', 2, ANALOG)>; /* ETH1_MDIO */
+		};
+	};
+
+	eth2_mdio_pins_mx: eth2_mdio_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 9, AF11)>, /* ETH2_MDIO */
+					 <STM32_PINMUX('H', 10, AF9)>; /* ETH2_MDC */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+	};
+
+	eth2_mdio_sleep_pins_mx: eth2_mdio_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 9, ANALOG)>, /* ETH2_MDIO */
+					 <STM32_PINMUX('H', 10, ANALOG)>; /* ETH2_MDC */
+		};
+	};
+
+	fdcan1_pins_mx: fdcan1_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 11, AF7)>; /* FDCAN1_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 9, AF7)>; /* FDCAN1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	fdcan1_sleep_pins_mx: fdcan1_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 9, ANALOG)>, /* FDCAN1_TX */
+					 <STM32_PINMUX('B', 11, ANALOG)>; /* FDCAN1_RX */
+		};
+	};
+
+	fdcan2_pins_mx: fdcan2_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('I', 10, AF7)>; /* FDCAN1_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('I', 9, AF4)>; /* FDCAN1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	fdcan2_sleep_pins_mx: fdcan2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 9, ANALOG)>, /* FDCAN1_TX */
+					 <STM32_PINMUX('I', 10, ANALOG)>; /* FDCAN1_RX */
+		};
+	};	
+
+	i2c1_pins_mx: i2c1_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('G', 13, AF9)>, /* I2C1_SCL */
+					 <STM32_PINMUX('I', 1, AF9)>; /* I2C1_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c1_sleep_pins_mx: i2c1_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('G', 13, ANALOG)>, /* I2C1_SCL */
+					 <STM32_PINMUX('I', 1, ANALOG)>; /* I2C1_SDA */
+		};
+	};
+
+	i2c2_pins_mx: i2c2_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 4, AF9)>, /* I2C2_SDA */
+					 <STM32_PINMUX('B', 5, AF9)>; /* I2C2_SCL */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 4, ANALOG)>, /* I2C2_SDA */
+					 <STM32_PINMUX('B', 5, ANALOG)>; /* I2C2_SCL */
+		};
+	};
+
+	pcie_pins_mx: pcie_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('J', 0, AF4)>; /* PCIE_CLKREQN */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	pcie_init_pins_mx: pcie_init_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('J', 0, ANALOG)>; /* PCIE_CLKREQN */
+		};
+	};
+
+	sdmmc1_pins_mx: sdmmc1_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 0, AF10)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('E', 1, AF10)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('E', 2, AF10)>, /* SDMMC1_CMD */
+					 <STM32_PINMUX('E', 4, AF10)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('E', 5, AF10)>; /* SDMMC1_D1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF10)>; /* SDMMC1_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc1_opendrain_pins_mx: sdmmc1_opendrain_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 0, AF10)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('E', 1, AF10)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('E', 4, AF10)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('E', 5, AF10)>; /* SDMMC1_D1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 2, AF10)>; /* SDMMC1_CMD */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('E', 3, AF10)>; /* SDMMC1_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 0, ANALOG)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('E', 1, ANALOG)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('E', 2, ANALOG)>, /* SDMMC1_CMD */
+					 <STM32_PINMUX('E', 3, ANALOG)>, /* SDMMC1_CK */
+					 <STM32_PINMUX('E', 4, ANALOG)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('E', 5, ANALOG)>; /* SDMMC1_D1 */
+		};
+	};
+
+	sdmmc2_pins_mx: sdmmc2_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 6, AF12)>, /* SDMMC2_D6 */
+					 <STM32_PINMUX('E', 7, AF12)>, /* SDMMC2_D7 */
+					 <STM32_PINMUX('E', 8, AF12)>, /* SDMMC2_D2 */
+					 <STM32_PINMUX('E', 9, AF12)>, /* SDMMC2_D5 */
+					 <STM32_PINMUX('E', 10, AF12)>, /* SDMMC2_D4 */
+					 <STM32_PINMUX('E', 11, AF12)>, /* SDMMC2_D1 */
+					 <STM32_PINMUX('E', 12, AF12)>, /* SDMMC2_D3 */
+					 <STM32_PINMUX('E', 13, AF12)>, /* SDMMC2_D0 */
+					 <STM32_PINMUX('E', 15, AF12)>; /* SDMMC2_CMD */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 14, AF12)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_opendrain_pins_mx: sdmmc2_opendrain_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 6, AF12)>, /* SDMMC2_D6 */
+					 <STM32_PINMUX('E', 7, AF12)>, /* SDMMC2_D7 */
+					 <STM32_PINMUX('E', 8, AF12)>, /* SDMMC2_D2 */
+					 <STM32_PINMUX('E', 9, AF12)>, /* SDMMC2_D5 */
+					 <STM32_PINMUX('E', 10, AF12)>, /* SDMMC2_D4 */
+					 <STM32_PINMUX('E', 11, AF12)>, /* SDMMC2_D1 */
+					 <STM32_PINMUX('E', 12, AF12)>, /* SDMMC2_D3 */
+					 <STM32_PINMUX('E', 13, AF12)>; /* SDMMC2_D0 */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 14, AF12)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('E', 15, AF12)>; /* SDMMC2_CMD */
+			bias-pull-up;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+	};
+
+	sdmmc2_sleep_pins_mx: sdmmc2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 6, ANALOG)>, /* SDMMC2_D6 */
+					 <STM32_PINMUX('E', 7, ANALOG)>, /* SDMMC2_D7 */
+					 <STM32_PINMUX('E', 8, ANALOG)>, /* SDMMC2_D2 */
+					 <STM32_PINMUX('E', 9, ANALOG)>, /* SDMMC2_D5 */
+					 <STM32_PINMUX('E', 10, ANALOG)>, /* SDMMC2_D4 */
+					 <STM32_PINMUX('E', 11, ANALOG)>, /* SDMMC2_D1 */
+					 <STM32_PINMUX('E', 12, ANALOG)>, /* SDMMC2_D3 */
+					 <STM32_PINMUX('E', 13, ANALOG)>, /* SDMMC2_D0 */
+					 <STM32_PINMUX('E', 14, ANALOG)>, /* SDMMC2_CK */
+					 <STM32_PINMUX('E', 15, ANALOG)>; /* SDMMC2_CMD */
+		};
+	};
+
+	sdmmc3_pins_mx: sdmmc3_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 12, AF10)>, /* SDMMC3_D2 */
+					 <STM32_PINMUX('B', 14, AF10)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('D', 12, AF10)>, /* SDMMC3_CMD */
+					 <STM32_PINMUX('D', 13, AF10)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('D', 14, AF12)>; /* SDMMC3_D3 */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 13, AF10)>; /* SDMMC3_CK */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc3_opendrain_pins_mx: sdmmc3_opendrain_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 12, AF10)>, /* SDMMC3_D2 */
+					 <STM32_PINMUX('B', 14, AF10)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('D', 13, AF10)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('D', 14, AF12)>; /* SDMMC3_D3 */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 13, AF10)>; /* SDMMC3_CK */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('D', 12, AF10)>; /* SDMMC3_CMD */
+			bias-pull-up;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+	};
+
+	sdmmc3_sleep_pins_mx: sdmmc3_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 12, ANALOG)>, /* SDMMC3_D2 */
+					 <STM32_PINMUX('B', 13, ANALOG)>, /* SDMMC3_CK */
+					 <STM32_PINMUX('B', 14, ANALOG)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('D', 12, ANALOG)>, /* SDMMC3_CMD */
+					 <STM32_PINMUX('D', 13, ANALOG)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('D', 14, ANALOG)>; /* SDMMC3_D3 */
+		};
+	};
+
+	tim4_pwm_pins_mx: tim4_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 7, AF7)>; /* TIM2_CH1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	tim4_pwm_sleep_pins_mx: tim8_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 7, ANALOG)>; /* TIM2_CH1 */
+		};
+	};
+
+	tim8_pins_mx: tim8_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('J', 4, AF8)>, /* TIM8_CH4 */
+					 <STM32_PINMUX('J', 5, AF8)>; /* TIM8_CH1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	tim8_sleep_pins_mx: tim8_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('J', 4, ANALOG)>, /* TIM8_CH4 */
+					 <STM32_PINMUX('J', 5, ANALOG)>; /* TIM8_CH1 */
+		};
+	};
+
+	usart1_pins_mx: usart1_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 10, AF6)>; /* USART1_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 8, AF6)>; /* USART1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	usart1_idle_pins_mx: usart1_idle_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 10, AF6)>; /* USART1_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 8, ANALOG)>; /* USART1_TX */
+		};
+	};
+
+	usart1_sleep_pins_mx: usart1_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 8, ANALOG)>, /* USART1_TX */
+					 <STM32_PINMUX('B', 10, ANALOG)>; /* USART1_RX */
+		};
+	};
+
+	usart2_pins_mx: usart2_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 4, AF6)>; /* USART2_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('A', 8, AF8)>; /* USART2_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+	};
+
+	usart2_idle_pins_mx: usart2_idle_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 4, ANALOG)>; /* USART2_TX */
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('A', 8, AF8)>; /* USART2_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+	};
+
+	usart2_sleep_pins_mx: usart2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 4, ANALOG)>, /* USART2_TX */
+					 <STM32_PINMUX('A', 8, ANALOG)>; /* USART2_RX */
+		};
+	};
+
+	uart5_pins_a: uart5_a-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 9, AF5)>; /* USART5_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* USART5_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+	};
+
+	uart5_idle_pins_a: uart5_idle_a-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 9, ANALOG)>; /* USART5_TX */
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* USART5_RX */
+			bias-disable;
+			drive-push-pull;
+		};
+	};
+
+	uart5_sleep_pins_a: uart5_sleep_a-0 {
+		pins {
+			pinmux = <STM32_PINMUX('G', 9, ANALOG)>, /* USART5_TX */
+					 <STM32_PINMUX('G', 10, ANALOG)>; /* USART5_RX */
+		};
+	};
+
+	usart6_pins_mx: usart6_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('C', 0, AF5)>, /* USART6_TX */
+					 <STM32_PINMUX('G', 5, AF3)>; /* USART6_DE */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 14, AF3)>; /* USART6_RX */
+			bias-pull-up;
+			drive-push-pull;
+		};
+	};
+
+	usart6_idle_pins_mx: usart6_idle_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('C', 0, ANALOG)>; /* USART6_TX */
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 14, AF3)>; /* USART6_RX */
+			bias-pull-up;
+			drive-push-pull;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 5, AF3)>; /* USART6_DE */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	usart6_sleep_pins_mx: usart6_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('C', 0, ANALOG)>, /* USART6_TX */
+					 <STM32_PINMUX('F', 14, ANALOG)>, /* USART6_RX */
+					 <STM32_PINMUX('G', 5, ANALOG)>; /* USART6_DE */
+		};
+	};
+
+	/* USER CODE BEGIN pinctrl */
+	eth1_rmii_pins_a: eth1-rmii-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 15, AF10)>, /* ETH1_RMII_TXD0 */
+				 <STM32_PINMUX('C', 1, AF10)>, /* ETH1_RMII_TXD1 */
+				 <STM32_PINMUX('A', 13, AF10)>; /* ETH1_RMII_TX_EN*/
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 3, AF9)>; /* ETH1_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('F', 1, AF10)>, /* ETH1_RMII_RXD0 */
+				 <STM32_PINMUX('C', 2, AF10)>, /* ETH1_RMII_RXD1 */
+				 <STM32_PINMUX('A', 11, AF10)>; /* ETH1_RMII_CRS_DV */
+			bias-disable;
+		};
+		pins4 {
+			pinmux = <STM32_PINMUX('C', 6, AF13)>; /* ETH1_PHY_INTN */
+			bias-disable;
+		};
+	};
+
+	eth2_rmii_pins_a: eth2_rmii-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('F', 4, AF9)>, /* ETH2_CLK */
+					 <STM32_PINMUX('C', 4, AF10)>, /* ETH2_RMII_TX_EN */
+					 <STM32_PINMUX('C', 7, AF10)>, /* ETH2_RMII_TXD0 */
+					 <STM32_PINMUX('C', 8, AF10)>; /* ETH2_RMII_TXD1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 3, AF10)>, /* ETH2__RMII_CRS_DV */
+					 <STM32_PINMUX('G', 0, AF10)>, /* ETH2_RMII_RXD0 */
+					 <STM32_PINMUX('C', 12, AF10)>; /* ETH2_RMII_RXD1 */
+			bias-disable;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('F', 5, AF10)>; /* ETH2_PHY_INTN */
+			bias-disable;
+		};		
+	};
+	/* USER CODE END pinctrl */
+};
+
+&pinctrl_z {
+
+	/* USER CODE BEGIN pinctrl_z */
+	/* USER CODE END pinctrl_z */
+};
+
+&combophy{
+	status = "okay";
+
+	/* USER CODE BEGIN combophy */
+	clocks = <&rcc CK_BUS_USB3PCIEPHY>, <&rcc CK_KER_USB3PCIEPHY>, <&pad_clk>;
+	clock-names = "apb-clk", "ker-clk", "pad-clk";
+	st,rx_equalizer = <1>;
+	/* USER CODE END combophy */
+};
+
+&cryp1{
+	status = "okay";
+
+	/* USER CODE BEGIN cryp1 */
+	/* USER CODE END cryp1 */
+};
+
+&eth1{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&eth1_mdio_pins_mx>;
+	pinctrl-1 = <&eth1_mdio_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN eth1 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&eth1_mdio_pins_mx &eth1_rmii_pins_a>;
+	//pinctrl-1 = <&eth1_mdio_sleep_pins_mx>;
+
+	phy-mode = "rmii";
+	max-speed = <100>;
+	st,eth-ref-clk-sel;
+	phy-handle = <&phy1_eth1>;
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+			phy1_eth1: ethernet-phy@0 {
+				compatible = "ethernet-phy-id0007.c0f0";
+				reset-gpios =  <&gpiog 8 GPIO_ACTIVE_LOW>;
+				reset-assert-us = <10000>;
+				reset-deassert-us = <80000>;
+				reg = <0>;
+			};
+	};
+	/* USER CODE END eth1 */
+};
+
+&eth2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&eth2_mdio_pins_mx>;
+	pinctrl-1 = <&eth2_mdio_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN eth2 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&eth2_mdio_pins_mx &eth2_rmii_pins_a>;
+	//pinctrl-1 = <&eth1_mdio_sleep_pins_mx>;
+
+	phy-mode = "rmii";
+	max-speed = <100>;
+	st,eth-ref-clk-sel;
+	phy-handle = <&phy1_eth2>;
+
+	mdio1 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		phy1_eth2: ethernet-phy@0 {
+			compatible = "ethernet-phy-id0007.c0f0"; 
+			reset-gpios = <&gpiog 11 GPIO_ACTIVE_LOW>;			
+			reset-assert-us = <10000>;
+			reset-deassert-us = <80000>;				
+			reg = <0>;
+		};
+	};	
+	/* USER CODE END eth2 */
+};
+
+&gpu{
+	status = "okay";
+
+	/* USER CODE BEGIN gpu */
+	contiguous-area = <&gpu_reserved>;
+	/* USER CODE END gpu */
+};
+
+&hpdma{
+	status = "okay";
+
+	/* USER CODE BEGIN hpdma */
+	memory-region = <&hpdma1_lli>;
+	/* USER CODE END hpdma */
+};
+
+&hpdma2{
+	status = "okay";
+
+	/* USER CODE BEGIN hpdma2 */
+	memory-region = <&hpdma2_lli>;
+	/* USER CODE END hpdma2 */
+};
+
+&hpdma3{
+	status = "okay";
+
+	/* USER CODE BEGIN hpdma3 */
+	memory-region = <&hpdma3_lli>;
+	/* USER CODE END hpdma3 */
+};
+
+&i2c1{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c1_pins_mx>;
+	pinctrl-1 = <&i2c1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN i2c1 */
+	i2c-scl-rising-time-ns = <185>;
+	i2c-scl-falling-time-ns = <20>;
+	clock-frequency = <100000>;
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+
+	codec: codec@38 {
+       compatible = "ti,tas2780";
+       reg = <0x38>;
+       #sound-dai-cells = <0>;
+       //interrupt-parent = <&gpio1>;
+       //interrupts = <14>;
+       //reset-gpios = <&gpio1 15 0>;
+       //shutdown-gpios = <&gpio1 15 0>;
+       //ti,imon-slot-no = <0>;
+       //ti,vmon-slot-no = <2>;
+     };
+
+	pcf8523: rtc@68 {
+		compatible = "nxp,pcf8523";
+		reg = <0x68>;
+	};
+	/* USER CODE END i2c1 */
+};
+
+&i2c2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c2_pins_mx>;
+	pinctrl-1 = <&i2c2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN i2c2 */
+	i2c-scl-rising-time-ns = <100>;
+	i2c-scl-falling-time-ns = <13>;
+	clock-frequency = <400000>;
+	/delete-property/ dmas;
+	/delete-property/ dma-names;
+	
+	adv753x: hdmi@3d {
+		/*
+		 * With MB1232 board, use "adi,adv7533" (1080p30)
+		 * With MB1752 board, use "adi,adv7535" (1080p60)
+		 */
+		compatible = "adi,adv7533";
+		reg = <0x3d>, <0x3c>, <0x3f>, <0x38>;
+		reg-names = "main", "cec", "edid", "packet";
+		clocks = <&cec_clock>;
+		clock-names = "cec";
+		interrupt-parent = <&gpiod>;
+		interrupts = <10 IRQ_TYPE_EDGE_FALLING>;
+		status = "disabled";
+		adi,dsi-lanes = <4>;
+		reset-gpios = <&gpiog 14 GPIO_ACTIVE_LOW>;
+		avdd-supply = <&scmi_v1v8>;
+		dvdd-supply = <&scmi_v1v8>;
+		pvdd-supply = <&scmi_v1v8>;
+		a2vdd-supply = <&scmi_v1v8>;
+		v3p3-supply = <&scmi_v3v3>;
+		v1p2-supply = <&scmi_v1v8>;
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				reg = <0>;
+				adv753x_in: endpoint {
+					remote-endpoint = <&dsi_out1>;
+				};
+			};
+
+			port@1 {
+				reg = <1>;
+				adv753x_out: endpoint {
+					remote-endpoint = <&hdmi_connector_in>;
+				};
+			};
+
+			port@2 {
+				reg = <2>;
+				adv753x_tx_endpoint: endpoint {
+					remote-endpoint = <&i2s2_endpoint>;
+				};
+			};
+		};
+	};
+	/* USER CODE END i2c2 */
+};
+
+&ipcc1{
+	status = "okay";
+
+	/* USER CODE BEGIN ipcc1 */
+	/* USER CODE END ipcc1 */
+};
+
+&ltdc{
+	status = "okay";
+
+	/* USER CODE BEGIN ltdc */
+	default-on;
+	rotation-memory = <&ltdc_sec_rotation>;
+
+	port{
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ltdc_ep0_out:endpoint@0{
+			reg = <0>;
+			remote-endpoint = <&dsi_in>;
+		};
+
+		ltdc_ep1_out:endpoint@1{
+			reg = <1>;
+			remote-endpoint = <&lvds_in>;
+		};
+	};
+	/* USER CODE END ltdc */
+};
+
+&lvds{
+	status = "okay";
+
+	/* USER CODE BEGIN lvds */
+	default-on;
+	vdd-supply = <&scmi_vddcore>;
+	vdda18-supply = <&scmi_v1v8>;
+
+	ports{
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		port@0{
+			reg = <0>;
+
+			lvds_in:endpoint{
+				remote-endpoint = <&ltdc_ep1_out>;
+			};
+		};
+
+		port@1{
+			reg = <1>;
+
+			lvds_out0:endpoint{
+				remote-endpoint = <&lvds_panel_in>;
+			};
+		};
+	};
+	/* USER CODE END lvds */
+};
+
+&m_can1{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fdcan1_pins_mx>;
+	pinctrl-1 = <&fdcan1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN m_can1 */
+	/* USER CODE END m_can1 */
+};
+
+//&m_can2{
+//	pinctrl-names = "default", "sleep";
+//	pinctrl-0 = <&fdcan2_pins_mx>;
+//	pinctrl-1 = <&fdcan2_sleep_pins_mx>;
+//	status = "okay";
+//};
+
+&m33_rproc{
+	status = "okay";
+
+	/* USER CODE BEGIN m33_rproc */
+	compatible = "st,stm32mp2-m33-tee";
+	mboxes = <&ipcc1 0x100>, <&ipcc1 0x101>, <&ipcc1 2>;
+	mbox-names = "vq0", "vq1", "shutdown";
+	memory-region = <&ipc_shmem_1>, <&vdev0vring0>,
+			<&vdev0vring1>, <&vdev0buffer>,
+			<&cm33_sram2>;
+	/* USER CODE END m33_rproc */
+};
+
+&pcie_rc{
+	pinctrl-names = "default", "init";
+	pinctrl-0 = <&pcie_pins_mx>;
+	pinctrl-1 = <&pcie_init_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN pcie_rc */
+	/* USER CODE END pcie_rc */
+};
+
+&pwr{
+	status = "okay";
+
+	/* USER CODE BEGIN pwr */
+	/* USER CODE END pwr */
+};
+
+&rtc{
+	status = "okay";
+
+	/* USER CODE BEGIN rtc */
+	/* USER CODE END rtc */
+};
+
+&sdmmc1{
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc1_pins_mx>;
+	pinctrl-1 = <&sdmmc1_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN sdmmc1 */
+	broken-cd;
+	disable-wp;
+	st,neg-edge;
+	bus-width = <4>;
+	vmmc-supply = <&scmi_v3v3>;
+	vqmmc-supply = <&scmi_vddio1>;
+	sd-uhs-sdr12;
+	sd-uhs-sdr25;
+	sd-uhs-sdr50;
+	sd-uhs-ddr50;
+	sd-uhs-sdr104;
+	/* USER CODE END sdmmc1 */
+};
+
+&sdmmc2{
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc2_pins_mx>;
+	pinctrl-1 = <&sdmmc2_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN sdmmc2 */
+	non-removable;
+	no-sd;
+	no-sdio;
+	st,neg-edge;
+	bus-width = <8>;
+	vmmc-supply = <&scmi_v3v3>;
+	vqmmc-supply = <&scmi_vddio2>;
+	mmc-ddr-1_8v;
+	mmc-hs200-1_8v;	
+	/* USER CODE END sdmmc2 */
+};
+
+&sdmmc3{
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_pins_mx>;
+	pinctrl-1 = <&sdmmc3_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc3_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN sdmmc3 */
+	non-removable;
+	st,neg-edge;
+	no-1-8-v;
+	pm-ignore-notify;
+	keep-power-in-suspend;	
+	bus-width = <4>;
+	vmmc-supply = <&scmi_v3v3>;
+	mmc-pwrseq = <&wifi_pwrseq>;
+	status = "okay";
+	/* USER CODE END sdmmc3 */
+};
+
+&timers2{
+	status = "disabled";
+
+	/* USER CODE BEGIN timers2 */
+	pwm {
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim4_pwm_pins_mx>;
+		pinctrl-1 = <&tim4_pwm_sleep_pins_mx>;
+		status = "disabled";
+
+		/* USER CODE BEGIN timers2_pwm */
+		/* USER CODE END timers2_pwm */
+	};
+
+	/* USER CODE END timers2 */
+};
+
+&timers8{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&tim8_pins_mx>;
+	pinctrl-1 = <&tim8_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN timers8 */
+	/* USER CODE END timers8 */
+};
+
+&usart1{
+	pinctrl-names = "default", "idle", "sleep";
+	pinctrl-0 = <&usart1_pins_mx>;
+	pinctrl-1 = <&usart1_idle_pins_mx>;
+	pinctrl-2 = <&usart1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart1 */
+	/delete-property/dmas;
+	/delete-property/dma-names;	
+	/* USER CODE END usart1 */
+};
+
+&usart2{
+	pinctrl-names = "default", "idle", "sleep";
+	pinctrl-0 = <&usart2_pins_mx>;
+	pinctrl-1 = <&usart2_idle_pins_mx>;
+	pinctrl-2 = <&usart2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart2 */
+	/delete-property/ dmas;
+	/delete-property/ dma-names;
+	/* USER CODE END usart2 */
+};
+
+&uart5{
+	pinctrl-names = "default", "idle", "sleep";
+	pinctrl-0 = <&uart5_pins_a>;
+	pinctrl-1 = <&uart5_idle_pins_a>;
+	pinctrl-2 = <&uart5_sleep_pins_a>;
+	status = "disabled";
+
+	/* USER CODE BEGIN usart2 */
+	/delete-property/ dmas;
+	/delete-property/ dma-names;
+	/* USER CODE END usart2 */
+};
+
+&usart6{
+	pinctrl-names = "default", "idle", "sleep";
+	pinctrl-0 = <&usart6_pins_mx>;
+	pinctrl-1 = <&usart6_idle_pins_mx>;
+	pinctrl-2 = <&usart6_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart6 */
+	//uart-has-rtscts;
+	linux,rs485-enabled-at-boot-time;	
+	/* USER CODE END usart6 */
+};
+
+&usb2_phy1{
+	status = "okay";
+
+	/* USER CODE BEGIN usb2_phy1 */
+	vdd33-supply = <&scmi_vdd3v3_usb>;
+	/* USER CODE END usb2_phy1 */
+};
+
+&usb2_phy2{
+	status = "okay";
+
+	/* USER CODE BEGIN usb2_phy2 */
+	vdd33-supply = <&scmi_vdd3v3_usb>;
+	/* USER CODE END usb2_phy2 */
+};
+
+&usb3dr{
+	status = "okay";
+
+	/* USER CODE BEGIN usb3dr */
+
+	dwc3:usb@48300000{
+		maximum-speed = "high-speed";
+		usb-role-switch;
+
+		port{
+
+			dwc3_ep:endpoint{
+				remote-endpoint = <&typec_ep>;
+			};
+		};
+	};
+	/* USER CODE END usb3dr */
+};
+
+&usbh{
+	status = "okay";
+
+	/* USER CODE BEGIN usbh */
+
+	usbh_ehci:usb@482f0000{
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		hub@1{
+			compatible = "usb424,2514";
+			reg = <1>;
+			vdd-supply = <&scmi_v3v3>;
+		};
+	};
+	/* USER CODE END usbh */
+};
+
+/* USER CODE BEGIN addons */
+
+&a35ss_syscfg{
+	status = "okay";
+};
+
+&arm_wdt{
+	timeout-sec = <32>;
+	status = "okay";
+};
+
+&cs_cpu_debug0{
+	status = "okay";
+};
+
+&cs_cpu_debug1{
+	status = "okay";
+};
+
+&cs_cti0{
+	status = "okay";
+};
+
+&cs_cti1{
+	status = "okay";
+};
+
+&cs_cti_cpu0{
+	status = "okay";
+};
+
+&cs_cti_cpu1{
+	status = "okay";
+};
+
+&cs_etf{
+	status = "okay";
+};
+
+&cs_etm0{
+	status = "okay";
+};
+
+&cs_etm1{
+	status = "okay";
+};
+
+&cs_etr{
+	status = "okay";
+};
+
+&cs_funnel{
+	status = "okay";
+};
+
+&cs_replicator{
+	status = "okay";
+};
+
+&cs_stm{
+	status = "okay";
+};
+
+&cs_tpiu{
+	status = "okay";
+};
+&dsi{
+	status = "disabled";
+	vdd-supply = <&scmi_vddcore>;
+	vdda18-supply = <&scmi_v1v8>;
+
+	ports{
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		port@0{
+			reg = <0>;
+
+			dsi_in:endpoint{
+				remote-endpoint = <&ltdc_ep0_out>;
+			};
+		};
+
+		port@1{
+			reg = <1>;
+
+			dsi_out1:endpoint{
+				remote-endpoint = <&adv753x_in>;
+			};
+		};
+	};
+};
+&i2s2 {
+	status = "disabled";
+
+	i2s2_port: port {
+		i2s2_endpoint: endpoint {
+			remote-endpoint = <&adv753x_tx_endpoint>;
+			format = "i2s";
+			mclk-fs = <256>;
+		};
+	};
+};
+
+&mlahb{
+
+	intc_rpmsg:interrupt-controller@1{
+		compatible = "rpmsg,intc";
+		reg = <1 0>;
+		#interrupt-cells = <1>;
+		interrupt-controller;
+	};
+
+	i2c_rpmsg:i2c@2{
+		compatible = "rpmsg,i2c-controller";
+		reg = <2 0>;
+		rpmsg,dev-id = "rpmsg_i2c";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+
+		typec@35{
+			compatible = "st,stm32mp25-typec";
+			reg = <0x35>;
+			interrupts-extended = <&intc_rpmsg 0>;
+			status = "disabled";
+
+			connector{
+				compatible = "usb-c-connector";
+				label = "USB-C";
+
+				port{
+
+					typec_ep:endpoint{
+						remote-endpoint = <&dwc3_ep>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&scmi_regu{
+
+	scmi_vddio1:regulator@0{
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <3300000>;
+	};
+
+	scmi_vddcore:regulator@11{
+		reg = <VOLTD_SCMI_STPMIC2_BUCK2>;
+		regulator-name = "vddcore";
+	};
+
+	scmi_v1v8:regulator@14{
+		reg = <VOLTD_SCMI_STPMIC2_BUCK5>;
+		regulator-name = "v1v8";
+	};
+
+	scmi_v3v3:regulator@16{
+		reg = <VOLTD_SCMI_STPMIC2_BUCK7>;
+		regulator-name = "v3v3";
+	};
+
+	scmi_vdd3v3_usb:regulator@20{
+		reg = <VOLTD_SCMI_STPMIC2_LDO4>;
+		regulator-name = "vdd3v3_usb";
+	};
+};
+/* USER CODE END addons */
+
